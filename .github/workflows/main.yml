name: Deploy back-end
on:
  push:
    branches:
      - main

jobs:
  run-tests:
    name: Run Test Suite
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}
      - name: Generate JWT Keys
        run: |
          mkdir -p config/jwt
          openssl genrsa -out config/jwt/private.pem 4096
          openssl rsa -in config/jwt/private.pem -outform PEM -pubout -out config/jwt/public.pem

      - name: "Validate composer.json and composer.lock"
        run: "composer validate"

      - name: "Determine composer cache directory"
        id: "determine-composer-cache-directory"
        run: "echo \"::set-output name=directory::$(composer config cache-dir)\""

      - name: "Cache dependencies installed with composer"
        uses: "actions/cache@v3"
        with:
          path: "${{ steps.determine-composer-cache-directory.outputs.directory }}"
          key: "php-composer-${{ runner.os }}-${{ hashFiles('composer.lock') }}"
          restore-keys: "php-composer-${{ runner.os }}-"

      - name: "Docker compose up -d"
        run: "docker compose up -d"

      - name: "Install dependencies"
        run: "make composer-install"

      - name: "Init Database"
        run: "make init-db-test"

      - name: "Quality"
        run: "make quality"
  deploy:
    needs: run-tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v1

      - name: Generate deployment package
        run: zip familymeetapi.zip -r ./

      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v13
        env:
          VERSION_LABEL: monapplication-api-${{ github.run_id }}
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: family-meet-api
          environment_name: family-meet-api-env
          version_label: ${{ env.VERSION_LABEL }}
          region: eu-west-3
          deployment_package: familymeetapi.zip
          use_existing_version_if_available: true
